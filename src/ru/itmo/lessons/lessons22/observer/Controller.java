package ru.itmo.lessons.lessons22.observer;

public class Controller implements Listener{ // 10.  онкретный слушатель, если объекты хот€т подписыватьс€ на событи€ в сенсоре, то класс должен »ћѕЋ≈ћ≈Ќ“»–ќ¬ј“№ интерфейс.
    private final String name; // green, yellow, rad
    private final int maxTemp; // 100, 300, 600
    private boolean up; // переммена€, котора€ говорит, что температура пошла вверх, нужна дл€ того что бы корректно оповещать если температура опустилась ниже точки оповещени€ и не дойд€ до следующей снова пошла вверх, что приведет снова к инициализации оповещени€.

    public Controller(String name, int maxTemp) {
        this.name = name;
        this.maxTemp = maxTemp;
    }

    @Override //11. автоматом, после имплементации, выкидываетс€ метод реагировани€, который необходимо переопределить.
    public void tempChanged(int temp) {
        if (temp >= maxTemp && !up) { // 12. темп пришла от сенсора и если она больше или равна темп.от контролллера и температура не продолжает идти вверх,
            System.out.println(name + ": " + temp); // 13. то говорим, что сработал татой то датчик и температура
            up = true; // 14. температура начинает идти вверх.
        }
        if (temp < maxTemp) up = false; // 15. если максимальна€ температура больше текущей то не  чего не происходит.
    // 16. как научили переменную up понимать куда идет темп, € не пон€л.
    }
}

